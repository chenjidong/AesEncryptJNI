apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                // cpp 编译时的额外选项
                cppFlags ""
            }
            ndk {
                // 设置 执行 gradle assembleRelease 时，支持的 SO 库构架
                // Specifies the ABI configurations of your native
                // libraries Gradle should build and package with your APK.
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        // cmakelists文件的路径 及版本号
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['jniLibs']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task makeJar(type: Copy) {
    //如果之前存在，则先删除
    delete 'build/libs/encrypt.jar'
    //设置拷贝的文件
    from('build/intermediates/packaged-classes/release/')

    //生成jar包后的文件目录位置
    into('release/libs/')
    //include,exclude参数来设置过滤
    include('classes.jar')
    //重命名
    rename('classes.jar','encrypt.jar')

}
makeJar.dependsOn(build)
